{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { removeSessionTokenFromStorage } from \"../../api/storage-api\";\nimport { updateUserProfile } from \"../../api/auth-api\";\nvar defaultProfileState = {\n  session_token: '',\n  csrf_token: '',\n  expires_at: '',\n  renew_by: '',\n  user: {\n    id: '',\n    channel_id: '',\n    group_id: '',\n    email: '',\n    phone: '',\n    username: '',\n    first_name: '',\n    last_name: '',\n    mfa_type: ''\n  }\n};\nexport var profile = {\n  state: defaultProfileState,\n  reducers: {\n    updateUserProfile: function updateUserProfile(_state, updatedProfile) {\n      return updatedProfile;\n    },\n    logoutUser: function logoutUser() {\n      removeSessionTokenFromStorage();\n      return defaultProfileState;\n    }\n  },\n  effects: function effects(dispatch) {\n    return {\n      changeUserProfile: function changeUserProfile(properties, rootState) {\n        var rootStateProfile, session_token, user;\n        return _regeneratorRuntime.async(function changeUserProfile$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                rootStateProfile = rootState.profile;\n                session_token = rootStateProfile.session_token;\n                _context.prev = 2;\n                _context.next = 5;\n                return _regeneratorRuntime.awrap(updateUserProfile(session_token, properties));\n\n              case 5:\n                user = _context.sent;\n                dispatch.profile.updateUserProfile(_objectSpread(_objectSpread({}, rootStateProfile), {}, {\n                  user: user\n                }));\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](2);\n                dispatch.toasts.show({\n                  content: _context.t0,\n                  variant: 'error'\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[2, 9]], Promise);\n      }\n    };\n  }\n};","map":{"version":3,"sources":["/mnt/c/Users/Dell/games/13-game/store/models/profile.tsx"],"names":["removeSessionTokenFromStorage","updateUserProfile","defaultProfileState","session_token","csrf_token","expires_at","renew_by","user","id","channel_id","group_id","email","phone","username","first_name","last_name","mfa_type","profile","state","reducers","_state","updatedProfile","logoutUser","effects","dispatch","changeUserProfile","properties","rootState","rootStateProfile","toasts","show","content","variant"],"mappings":";;;;;;;AACA,SAASA,6BAAT;AACA,SAASC,iBAAT;AAgBA,IAAMC,mBAAmB,GAAG;AAC1BC,EAAAA,aAAa,EAAE,EADW;AAE1BC,EAAAA,UAAU,EAAE,EAFc;AAG1BC,EAAAA,UAAU,EAAE,EAHc;AAI1BC,EAAAA,QAAQ,EAAE,EAJgB;AAK1BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,EAAE,EAAE,EADA;AAEJC,IAAAA,UAAU,EAAE,EAFR;AAGJC,IAAAA,QAAQ,EAAE,EAHN;AAIJC,IAAAA,KAAK,EAAE,EAJH;AAKJC,IAAAA,KAAK,EAAE,EALH;AAMJC,IAAAA,QAAQ,EAAE,EANN;AAOJC,IAAAA,UAAU,EAAE,EAPR;AAQJC,IAAAA,SAAS,EAAE,EARP;AASJC,IAAAA,QAAQ,EAAE;AATN;AALoB,CAA5B;AAkBA,OAAO,IAAMC,OAAqB,GAAG;AACnCC,EAAAA,KAAK,EAAEhB,mBAD4B;AAEnCiB,EAAAA,QAAQ,EAAE;AACRlB,IAAAA,iBAAiB,EAAE,2BAACmB,MAAD,EAAcC,cAAd;AAAA,aAA0CA,cAA1C;AAAA,KADX;AAERC,IAAAA,UAAU,EAAE,sBAAM;AAChBtB,MAAAA,6BAA6B;AAC7B,aAAOE,mBAAP;AACD;AALO,GAFyB;AASnCqB,EAAAA,OAAO,EAAE,iBAACC,QAAD;AAAA,WAAyB;AAC1BC,MAAAA,iBAD0B,6BACRC,UADQ,EACSC,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAEbC,gBAAAA,gBAFa,GAEQD,SAFR,CAEtBV,OAFsB;AAGtBd,gBAAAA,aAHsB,GAGJyB,gBAHI,CAGtBzB,aAHsB;AAAA;AAAA;AAAA,iDAMTF,iBAAiB,CAACE,aAAD,EAAgBuB,UAAhB,CANR;;AAAA;AAMtBnB,gBAAAA,IANsB;AAO5BiB,gBAAAA,QAAQ,CAACP,OAAT,CAAiBhB,iBAAjB,iCAAwC2B,gBAAxC;AAA0DrB,kBAAAA,IAAI,EAAJA;AAA1D;AAP4B;AAAA;;AAAA;AAAA;AAAA;AAS5BiB,gBAAAA,QAAQ,CAACK,MAAT,CAAgBC,IAAhB,CAAqB;AACnBC,kBAAAA,OAAO,aADY;AAEnBC,kBAAAA,OAAO,EAAE;AAFU,iBAArB;;AAT4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAzB;AAAA;AAT0B,CAA9B","sourcesContent":["import { Profile } from '@types';\nimport { removeSessionTokenFromStorage } from '@api/storage-api';\nimport { updateUserProfile } from '@api/auth-api';\nimport { Dispatch } from '..';\n\nexport type ProfileModel = {\n  state: Profile;\n  reducers: {\n    updateUserProfile: (state: any, profile: Profile) => Profile;\n    logoutUser: () => any;\n  };\n  effects: (\n    dispatch: Dispatch\n  ) => {\n    changeUserProfile: (properties: any, rootState?: any) => any;\n  };\n};\n\nconst defaultProfileState = {\n  session_token: '',\n  csrf_token: '',\n  expires_at: '',\n  renew_by: '',\n  user: {\n    id: '',\n    channel_id: '',\n    group_id: '',\n    email: '',\n    phone: '',\n    username: '',\n    first_name: '',\n    last_name: '',\n    mfa_type: '',\n  },\n};\n\nexport const profile: ProfileModel = {\n  state: defaultProfileState,\n  reducers: {\n    updateUserProfile: (_state: any, updatedProfile: Profile) => updatedProfile,\n    logoutUser: () => {\n      removeSessionTokenFromStorage();\n      return defaultProfileState;\n    },\n  },\n  effects: (dispatch: Dispatch) => ({\n    async changeUserProfile(properties: any, rootState?: any) {\n      const { profile: rootStateProfile } = rootState;\n      const { session_token } = rootStateProfile;\n\n      try {\n        const user = await updateUserProfile(session_token, properties);\n        dispatch.profile.updateUserProfile({ ...rootStateProfile, user });\n      } catch (error) {\n        dispatch.toasts.show({\n          content: error,\n          variant: 'error',\n        });\n      }\n    },\n  }),\n};\n"]},"metadata":{},"sourceType":"module"}