{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/mnt/c/Users/Dell/games/13-game/components/AppContainer.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { memo, useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as Font from \"expo-font\";\nimport { ToastWrapper } from \"./Toast\";\n\nvar AppContainer = function AppContainer(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontLoaded = _useState2[0],\n      setFontLoadingStatus = _useState2[1];\n\n  useEffect(function () {\n    function loadFonts() {\n      return _regeneratorRuntime.async(function loadFonts$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                \"ibm-plex-bold\": require(\"../assets/fonts/IBMPlexSans-SemiBold.ttf\"),\n                \"ibm-plex-medium\": require(\"../assets/fonts/IBMPlexSans-Medium.ttf\"),\n                \"ibm-plex-regular\": require(\"../assets/fonts/IBMPlexSans-Regular.ttf\"),\n                \"shadow-into-light\": require(\"../assets/fonts/ShadowsIntoLight-Regular.ttf\")\n              }));\n\n            case 2:\n              setFontLoadingStatus(true);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    loadFonts();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, fontLoaded && React.createElement(React.Fragment, null, children, React.createElement(ToastWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: \"100%\",\n    height: \"100%\"\n  }\n});\nexport default memo(AppContainer);","map":{"version":3,"sources":["/mnt/c/Users/Dell/games/13-game/components/AppContainer.tsx"],"names":["React","memo","useEffect","useState","Font","ToastWrapper","AppContainer","children","fontLoaded","setFontLoadingStatus","loadFonts","loadAsync","require","styles","container","StyleSheet","create","flex","width","height"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;;;AAEA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AAEA,SAASC,YAAT;;AAMA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAyB;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;;AAAA,kBACDJ,QAAQ,CAAC,KAAD,CADP;AAAA;AAAA,MACrCK,UADqC;AAAA,MACzBC,oBADyB;;AAG5CP,EAAAA,SAAS,CAAC,YAAM;AACd,aAAeQ,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACQN,IAAI,CAACO,SAAL,CAAe;AACnB,iCAAiBC,OAAO,4CADL;AAEnB,mCAAmBA,OAAO,0CAFP;AAGnB,oCAAoBA,OAAO,2CAHR;AAInB,qCAAqBA,OAAO;AAJT,eAAf,CADR;;AAAA;AAQEH,cAAAA,oBAAoB,CAAC,IAAD,CAApB;;AARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWAC,IAAAA,SAAS;AACV,GAbQ,EAaN,EAbM,CAAT;AAeA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,UAAU,IACT,0CACGD,QADH,EAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFJ,CADF;AAUD,CA5BD;;AA8BA,IAAMM,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,KAAK,EAAE,MAFE;AAGTC,IAAAA,MAAM,EAAE;AAHC;AADoB,CAAlB,CAAf;AAQA,eAAelB,IAAI,CAACK,YAAD,CAAnB","sourcesContent":["import React, { memo, useEffect, useState } from \"react\"\nimport { View, StyleSheet } from \"react-native\"\nimport * as Font from \"expo-font\"\n\nimport { ToastWrapper } from \"@components/Toast\"\n\ntype Props = {\n  children: React.ReactNode\n}\n\nconst AppContainer = ({ children }: Props) => {\n  const [fontLoaded, setFontLoadingStatus] = useState(false)\n\n  useEffect(() => {\n    async function loadFonts() {\n      await Font.loadAsync({\n        \"ibm-plex-bold\": require(\"../assets/fonts/IBMPlexSans-SemiBold.ttf\"),\n        \"ibm-plex-medium\": require(\"../assets/fonts/IBMPlexSans-Medium.ttf\"),\n        \"ibm-plex-regular\": require(\"../assets/fonts/IBMPlexSans-Regular.ttf\"),\n        \"shadow-into-light\": require(\"../assets/fonts/ShadowsIntoLight-Regular.ttf\"),\n      })\n\n      setFontLoadingStatus(true)\n    }\n\n    loadFonts()\n  }, [])\n\n  return (\n    <View style={styles.container}>\n      {fontLoaded && (\n        <>\n          {children}\n          <ToastWrapper />\n        </>\n      )}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: \"100%\",\n    height: \"100%\",\n  },\n})\n\nexport default memo(AppContainer)\n"]},"metadata":{},"sourceType":"module"}