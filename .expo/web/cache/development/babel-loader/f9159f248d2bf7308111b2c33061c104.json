{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dell\\\\dev\\\\13-game\\\\App.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport { ThemeProvider } from \"styled-components/native\";\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport Navigation from \"./navigation\";\nimport { dark, light } from \"./styles/theme\";\nimport { useMachine } from \"@xstate/react\";\nimport machine from \"./state/machine\";\nexport default function App() {\n  var isLoadingComplete = useCachedResources();\n  var colorScheme = useColorScheme();\n\n  var _useMachine = useMachine(machine),\n      _useMachine2 = _slicedToArray(_useMachine, 3),\n      state = _useMachine2[0],\n      send = _useMachine2[1],\n      service = _useMachine2[2];\n\n  console.log(\"APP state\", state.value);\n  console.log(\"APP SERVUCE\", service);\n  var theme = state.value === \"dark\" ? dark : light;\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return React.createElement(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, React.createElement(SafeAreaProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, React.createElement(Navigation, {\n      colorScheme: colorScheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }), React.createElement(StatusBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    })));\n  }\n}","map":{"version":3,"sources":["C:/Users/Dell/dev/13-game/App.js"],"names":["StatusBar","React","SafeAreaProvider","ThemeProvider","useCachedResources","useColorScheme","Navigation","dark","light","useMachine","machine","App","isLoadingComplete","colorScheme","state","send","service","console","log","value","theme"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,OAAOC,kBAAP;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;AAEA,SAASC,IAAT,EAAeC,KAAf;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,OAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,MAAMC,iBAAiB,GAAGR,kBAAkB,EAA5C;AACA,MAAMS,WAAW,GAAGR,cAAc,EAAlC;;AAF4B,oBAGGI,UAAU,CAACC,OAAD,CAHb;AAAA;AAAA,MAGrBI,KAHqB;AAAA,MAGdC,IAHc;AAAA,MAGRC,OAHQ;;AAI5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,KAAK,CAACK,KAA/B;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,OAA3B;AACA,MAAMI,KAAK,GAAGN,KAAK,CAACK,KAAN,KAAgB,MAAhB,GAAyBZ,IAAzB,GAAgCC,KAA9C;;AAEA,MAAI,CAACI,iBAAL,EAAwB;AACtB,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WACE,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAEQ,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,WAAW,EAAEP,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF;AAQD;AACF","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport { ThemeProvider } from \"styled-components/native\";\n\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport Navigation from \"./navigation\";\n\nimport { dark, light } from \"./styles/theme\";\nimport { useMachine } from \"@xstate/react\";\nimport machine from \"./state/machine\";\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n  const [state, send, service] = useMachine(machine);\n  console.log(\"APP state\", state.value);\n  console.log(\"APP SERVUCE\", service);\n  const theme = state.value === \"dark\" ? dark : light;\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <ThemeProvider theme={theme}>\n        <SafeAreaProvider>\n          <Navigation colorScheme={colorScheme} />\n          <StatusBar />\n        </SafeAreaProvider>\n      </ThemeProvider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}