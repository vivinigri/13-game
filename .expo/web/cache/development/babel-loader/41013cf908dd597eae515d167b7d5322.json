{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/mnt/c/Users/Dell/games/13-game/components/Toast/ToastWrapper.tsx\";\n\nimport React, { memo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSelector } from 'react-redux';\nimport { Portal } from 'react-native-paper';\nimport { getStatusBarHeight } from 'react-native-status-bar-height';\nimport { dispatch } from \"../../store\";\nimport Toast from \"./Toast\";\nimport { theme } from \"../../core/theme\";\n\nvar ToastWrapper = function ToastWrapper() {\n  var toasts = useSelector(function (_ref) {\n    var toasts = _ref.toasts;\n    return toasts;\n  });\n  return React.createElement(Portal, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, toasts.map(function (_ref2) {\n    var id = _ref2.id,\n        variant = _ref2.variant,\n        content = _ref2.content,\n        duration = _ref2.duration,\n        tryAgain = _ref2.tryAgain,\n        label = _ref2.label;\n    return React.createElement(Toast, {\n      key: id,\n      id: id,\n      variant: variant,\n      onClose: function onClose() {\n        return dispatch.toasts.hide(id);\n      },\n      content: content,\n      duration: duration,\n      tryAgain: tryAgain,\n      label: label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    });\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    width: '100%',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    top: theme.spacings.section + getStatusBarHeight(),\n    zIndex: 20000,\n    elevation: 9\n  }\n});\nexport default memo(ToastWrapper);","map":{"version":3,"sources":["/mnt/c/Users/Dell/games/13-game/components/Toast/ToastWrapper.tsx"],"names":["React","memo","useSelector","Portal","getStatusBarHeight","dispatch","Toast","theme","ToastWrapper","toasts","styles","container","map","id","variant","content","duration","tryAgain","label","hide","StyleSheet","create","position","width","flexDirection","alignItems","justifyContent","top","spacings","section","zIndex","elevation"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;;;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AAEA,SAAoBC,QAApB;AACA,OAAOC,KAAP;AACA,SAASC,KAAT;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,MAAMC,MAAM,GAAGP,WAAW,CAAC;AAAA,QAAGO,MAAH,QAAGA,MAAH;AAAA,WAA2BA,MAA3B;AAAA,GAAD,CAA1B;AAEA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,MAAM,CAACG,GAAP,CAAW;AAAA,QAAGC,EAAH,SAAGA,EAAH;AAAA,QAAOC,OAAP,SAAOA,OAAP;AAAA,QAAgBC,OAAhB,SAAgBA,OAAhB;AAAA,QAAyBC,QAAzB,SAAyBA,QAAzB;AAAA,QAAmCC,QAAnC,SAAmCA,QAAnC;AAAA,QAA6CC,KAA7C,SAA6CA,KAA7C;AAAA,WACV,oBAAC,KAAD;AACE,MAAA,GAAG,EAAEL,EADP;AAEE,MAAA,EAAE,EAAEA,EAFN;AAGE,MAAA,OAAO,EAAEC,OAHX;AAIE,MAAA,OAAO,EAAE;AAAA,eAAMT,QAAQ,CAACI,MAAT,CAAgBU,IAAhB,CAAqBN,EAArB,CAAN;AAAA,OAJX;AAKE,MAAA,OAAO,EAAEE,OALX;AAME,MAAA,QAAQ,EAAEC,QANZ;AAOE,MAAA,QAAQ,EAAEC,QAPZ;AAQE,MAAA,KAAK,EAAEC,KART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU;AAAA,GAAX,CADH,CADF,CADF;AAkBD,CArBD;;AAuBA,IAAMR,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,SAAS,EAAE;AACTW,IAAAA,QAAQ,EAAE,UADD;AAETC,IAAAA,KAAK,EAAE,MAFE;AAGTC,IAAAA,aAAa,EAAE,QAHN;AAITC,IAAAA,UAAU,EAAE,QAJH;AAKTC,IAAAA,cAAc,EAAE,QALP;AAMTC,IAAAA,GAAG,EAAEpB,KAAK,CAACqB,QAAN,CAAeC,OAAf,GAAyBzB,kBAAkB,EANvC;AAOT0B,IAAAA,MAAM,EAAE,KAPC;AAQTC,IAAAA,SAAS,EAAE;AARF;AADoB,CAAlB,CAAf;AAaA,eAAe9B,IAAI,CAACO,YAAD,CAAnB","sourcesContent":["import React, { memo } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { Portal } from 'react-native-paper';\nimport { getStatusBarHeight } from 'react-native-status-bar-height';\n\nimport { RootState, dispatch } from '@store';\nimport Toast from './Toast';\nimport { theme } from '@core/theme';\n\nconst ToastWrapper = () => {\n  const toasts = useSelector(({ toasts }: RootState) => toasts);\n\n  return (\n    <Portal>\n      <View style={styles.container}>\n        {toasts.map(({ id, variant, content, duration, tryAgain, label }) => (\n          <Toast\n            key={id}\n            id={id}\n            variant={variant}\n            onClose={() => dispatch.toasts.hide(id)}\n            content={content}\n            duration={duration}\n            tryAgain={tryAgain}\n            label={label}\n          />\n        ))}\n      </View>\n    </Portal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    width: '100%',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    top: theme.spacings.section + getStatusBarHeight(),\n    zIndex: 20000,\n    elevation: 9,\n  },\n});\n\nexport default memo(ToastWrapper);\n"]},"metadata":{},"sourceType":"module"}