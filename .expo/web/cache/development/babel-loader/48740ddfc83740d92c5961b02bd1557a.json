{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Dell\\\\dev\\\\13-game\\\\screens\\\\ScoreBoardScreen.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  height: 40;\\n  background-color: \", \";\\n  text-align: center;\\n\\n  * {\\n    /* color: \", \"; */\\n    color: yellow;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  background-color: \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Table, TableWrapper, Row, Rows, Col } from \"react-native-table-component\";\nimport styled, { withTheme } from \"styled-components/native\";\nvar SCORE_TABLE = {\n  tableHead: [\"\", \"Head1\", \"Head2\", \"Head3\"],\n  tableTitle: [\"Title\", \"Title2\", \"Title3\", \"Title4\"],\n  tableData: [[\"1\", \"2\", \"3\"], [\"a\", \"b\", \"c\"], [\"1\", \"2\", \"3\"], [\"a\", \"b\", \"c\"]]\n};\nvar ScrollViewMain = styled(ScrollView)(_templateObject(), function (props) {\n  return props.theme.BACKGROUND_COLOR;\n});\nvar RowHeader = styled(Row)(_templateObject2(), function (props) {\n  return props.theme.INACTIVE_COLOR;\n}, function (props) {\n  return props.theme.FOREGROUND_COLOR;\n});\n\nvar ScoreBoardScreen = function ScoreBoardScreen(props) {\n  console.log(props.theme.BACKGROUND_COLOR);\n  return React.createElement(ScrollViewMain, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(Table, {\n    borderStyle: {\n      borderWidth: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, React.createElement(RowHeader, {\n    data: SCORE_TABLE.tableHead,\n    flexArr: [1, 2, 2, 2],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), React.createElement(TableWrapper, {\n    style: styles.wrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(Col, {\n    data: SCORE_TABLE.tableTitle,\n    style: styles.title,\n    heightArr: [28, 28],\n    textStyle: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), React.createElement(Rows, {\n    data: SCORE_TABLE.tableData,\n    flexArr: [2, 2, 2],\n    style: styles.row,\n    textStyle: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    paddingTop: 30,\n    backgroundColor: \"#fff\"\n  },\n  head: {\n    height: 40,\n    backgroundColor: \"#f1f8ff\"\n  },\n  wrapper: {\n    flexDirection: \"row\"\n  },\n  title: {\n    flex: 1,\n    backgroundColor: \"#f6f8fa\"\n  },\n  row: {\n    height: 28\n  },\n  text: {\n    textAlign: \"center\",\n    color: \"#ff0000\"\n  }\n});\nexport default withTheme(ScoreBoardScreen);","map":{"version":3,"sources":["C:/Users/Dell/dev/13-game/screens/ScoreBoardScreen.js"],"names":["React","Table","TableWrapper","Row","Rows","Col","styled","withTheme","SCORE_TABLE","tableHead","tableTitle","tableData","ScrollViewMain","ScrollView","props","theme","BACKGROUND_COLOR","RowHeader","INACTIVE_COLOR","FOREGROUND_COLOR","ScoreBoardScreen","console","log","borderWidth","styles","wrapper","title","text","row","StyleSheet","create","container","flex","padding","paddingTop","backgroundColor","head","height","flexDirection","textAlign","color"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { ScrollView, StyleSheet } from \"react-native\";\r\nimport {\r\n  Table,\r\n  TableWrapper,\r\n  Row,\r\n  Rows,\r\n  Col\r\n} from \"react-native-table-component\";\r\nimport styled, { withTheme } from \"styled-components/native\";\r\n\r\nconst SCORE_TABLE = {\r\n  tableHead: [\"\", \"Head1\", \"Head2\", \"Head3\"],\r\n  tableTitle: [\"Title\", \"Title2\", \"Title3\", \"Title4\"],\r\n  tableData: [\r\n    [\"1\", \"2\", \"3\"],\r\n    [\"a\", \"b\", \"c\"],\r\n    [\"1\", \"2\", \"3\"],\r\n    [\"a\", \"b\", \"c\"]\r\n  ]\r\n};\r\n\r\nconst ScrollViewMain = styled(ScrollView)`\r\n  background-color: ${(props) => props.theme.BACKGROUND_COLOR};\r\n`;\r\n\r\nconst RowHeader = styled(Row)`\r\n  height: 40;\r\n  background-color: ${(props) => props.theme.INACTIVE_COLOR};\r\n  text-align: center;\r\n\r\n  * {\r\n    /* color: ${(props) => props.theme.FOREGROUND_COLOR}; */\r\n    color: yellow;\r\n  }\r\n`;\r\n\r\nconst ScoreBoardScreen = (props) => {\r\n  console.log(props.theme.BACKGROUND_COLOR);\r\n  return (\r\n    <ScrollViewMain>\r\n      <Table borderStyle={{ borderWidth: 1 }}>\r\n        <RowHeader\r\n          data={SCORE_TABLE.tableHead}\r\n          flexArr={[1, 2, 2, 2]}\r\n          // style={styles.head}\r\n          // textStyle={styles.text}\r\n        />\r\n        <TableWrapper style={styles.wrapper}>\r\n          <Col\r\n            data={SCORE_TABLE.tableTitle}\r\n            style={styles.title}\r\n            heightArr={[28, 28]}\r\n            textStyle={styles.text}\r\n          />\r\n          <Rows\r\n            data={SCORE_TABLE.tableData}\r\n            flexArr={[2, 2, 2]}\r\n            style={styles.row}\r\n            textStyle={styles.text}\r\n          />\r\n        </TableWrapper>\r\n      </Table>\r\n    </ScrollViewMain>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, padding: 16, paddingTop: 30, backgroundColor: \"#fff\" },\r\n  head: { height: 40, backgroundColor: \"#f1f8ff\" },\r\n  wrapper: { flexDirection: \"row\" },\r\n  title: { flex: 1, backgroundColor: \"#f6f8fa\" },\r\n  row: { height: 28 },\r\n  text: { textAlign: \"center\", color: \"#ff0000\" }\r\n});\r\n\r\nexport default withTheme(ScoreBoardScreen);\r\n"]},"metadata":{},"sourceType":"module"}